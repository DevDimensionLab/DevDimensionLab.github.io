<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Commands on Co-pilot-cli</title>
    <link>https://co-pilot-cli.github.io/commands/</link>
    <description>Recent content in Commands on Co-pilot-cli</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 30 Sep 2020 10:27:44 +0200</lastBuildDate>
    
	<atom:link href="https://co-pilot-cli.github.io/commands/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Upgrade</title>
      <link>https://co-pilot-cli.github.io/commands/upgrade/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:44 +0200</pubDate>
      
      <guid>https://co-pilot-cli.github.io/commands/upgrade/</guid>
      <description>Upgrade is a command for upgrading all or specific parts of a project.
Example usage co-pilot upgrade all --target webservice Example output INFO[0000] upgrading everything for file webservice/pom.xml INFO[0000] outdated kotlin version [1.4.8 =&amp;gt; 1.4.10] INFO[0000] outdated spring-boot version [2.3.1.RELEASE =&amp;gt; 2.3.4.RELEASE] INFO[0000] outdated dependency org.hibernate:hibernate-core [5.2.21.Final =&amp;gt; 5.4.21.Final] INFO[0000] outdated dependency net.logstash.logback:logstash-logback-encoder [6.2 =&amp;gt; 6.4] INFO[0000] sorting pom file with default dependencySort INFO[0000] writing model to pom file: webservice/pom.xml Help Perform upgrade on existing projects Usage: co-pilot upgrade [command] Available Commands: 2party Upgrade all 2party dependencies to project 3party Upgrade all 3party dependencies to project all Upgrade everything in project dependency Upgrade a specific dependency on a project deprecated Remove and replace deprecated dependencies in a project kotlin Upgrade kotlin version in project plugins Upgrade all plugins found in project spring-boot Upgrade spring-boot to the latest version Flags: --dry-run dry run does not write to pom.</description>
    </item>
    
    <item>
      <title>Status</title>
      <link>https://co-pilot-cli.github.io/commands/status/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:42 +0200</pubDate>
      
      <guid>https://co-pilot-cli.github.io/commands/status/</guid>
      <description>Status is a command for printing status on a co-pilot project. By default it outputs available upgrades.
Example usage co-pilot status Example output INFO[0000] Project status for file ./pom.xml INFO[0000] No update needed, kotlin is the the latest version [1.4.10] INFO[0000] spring boot is the latest version [2.3.4.RELEASE] Help Status functionality for a project Usage: co-pilot status [flags] Flags: -h, --help help for status -r, --recursive turn on recursive mode --show show project status --target string optional target directory (default &amp;quot;.</description>
    </item>
    
    <item>
      <title>Merge</title>
      <link>https://co-pilot-cli.github.io/commands/merge/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:39 +0200</pubDate>
      
      <guid>https://co-pilot-cli.github.io/commands/merge/</guid>
      <description>Merge is a standalone command for merging a specific template into a target. It is the same process used iteratively by generate
Help Merge functionalities for files to a project Usage: co-pilot merge [command] Available Commands: pom Merges a pom-file into a project template Merges a template from co-pilot-config text Merges two text files Flags: --from string file to merge -h, --help help for merge Global Flags: --debug turn on debug output </description>
    </item>
    
    <item>
      <title>Init</title>
      <link>https://co-pilot-cli.github.io/commands/init/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:32 +0200</pubDate>
      
      <guid>https://co-pilot-cli.github.io/commands/init/</guid>
      <description>Initializes a project with co-pilot files like co-pilot.json. The command also overwrites the pom.xml files with standard formatting and sorting.
Help Initializes a maven project with co-pilot files and formatting Usage: co-pilot init [flags] Flags: --config-file string Optional config file --dry-run dry run does not write to pom.xml -h, --help help for init -r, --recursive turn on recursive mode --target string Optional target directory (default &amp;quot;.&amp;quot;) Global Flags: --debug turn on debug output </description>
    </item>
    
    <item>
      <title>Info</title>
      <link>https://co-pilot-cli.github.io/commands/info/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:29 +0200</pubDate>
      
      <guid>https://co-pilot-cli.github.io/commands/info/</guid>
      <description>Info is a command for printing various non-project information like spring-info, spring-managed dependencies, and which maven-repositories are defined by mvn
Help Prints info on spring version, dependencies etc Usage: co-pilot info [flags] Flags: -h, --help help for info --maven-repositories show current maven repositories --spring-info show spring boot status --spring-managed show spring boot managed dependencies info Global Flags: --debug turn on debug output </description>
    </item>
    
    <item>
      <title>Generate</title>
      <link>https://co-pilot-cli.github.io/commands/generate/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:20 +0200</pubDate>
      
      <guid>https://co-pilot-cli.github.io/commands/generate/</guid>
      <description>Example co-pilot.json file { &amp;quot;language&amp;quot;: &amp;quot;kotlin&amp;quot;, &amp;quot;groupId&amp;quot;: &amp;quot;com.example&amp;quot;, &amp;quot;artifactId&amp;quot;: &amp;quot;app&amp;quot;, &amp;quot;package&amp;quot;: &amp;quot;com.example.app&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Example REST basic app&amp;quot;, &amp;quot;team&amp;quot;: { &amp;quot;name&amp;quot;: &amp;quot;demo-name&amp;quot;, &amp;quot;email&amp;quot;: &amp;quot;demo-email@example.com&amp;quot; }, &amp;quot;description&amp;quot;: &amp;quot;Demo of new app, generated with spring-boot and co-pilot templates&amp;quot;, &amp;quot;dependencies&amp;quot;: [&amp;quot;web-services&amp;quot;], &amp;quot;templates&amp;quot; : [&amp;quot;dockerfile&amp;quot;, &amp;quot;rest-basic&amp;quot;] } This file is the same file used for project-configuration, and is described at project configuration
Example usage co-pilot generate --config-file co-pilot.json --target webservice Example output INFO[0000] pulling cloud config on /home/user/.</description>
    </item>
    
    <item>
      <title>Format</title>
      <link>https://co-pilot-cli.github.io/commands/format/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:18 +0200</pubDate>
      
      <guid>https://co-pilot-cli.github.io/commands/format/</guid>
      <description>Example usage co-pilot format pom --target webservice Example output INFO[0000] formatting for file webservice/pom.xml INFO[0000] sorting pom file with default dependencySort INFO[0000] writing model to pom file: webservice/pom.xml Help Format functionality for a project Usage: co-pilot format [command] Available Commands: inherit Removes manual versions from spring dependencies pom Formats pom.xml and sorts dependencies version Removes version tags and replaces them with property tags Flags: --dry-run dry run does not write to pom.</description>
    </item>
    
    <item>
      <title>Config</title>
      <link>https://co-pilot-cli.github.io/commands/config/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:11 +0200</pubDate>
      
      <guid>https://co-pilot-cli.github.io/commands/config/</guid>
      <description>Help Config settings for co-pilot Usage: co-pilot config [flags] Flags: --cloud-sync sync with cloud config repo -h, --help help for config --reset reset local config --show show local config Global Flags: --debug turn on debug output </description>
    </item>
    
    <item>
      <title>Clean</title>
      <link>https://co-pilot-cli.github.io/commands/clean/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:03 +0200</pubDate>
      
      <guid>https://co-pilot-cli.github.io/commands/clean/</guid>
      <description>Example usage co-pilot clean --ide --target webservice Example output INFO[0000] Deleted 0 files and 0 directories Help Clean files and folder in a project Usage: co-pilot clean [flags] Flags: --dry-run dry run does not write to pom.xml -h, --help help for clean --ide removes .idea folders and *.iml files -r, --recursive turn on recursive mode --target string Optional target directory (default &amp;quot;.&amp;quot;) Global Flags: --debug turn on debug output </description>
    </item>
    
    <item>
      <title>Analyze</title>
      <link>https://co-pilot-cli.github.io/commands/analyze/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:00 +0200</pubDate>
      
      <guid>https://co-pilot-cli.github.io/commands/analyze/</guid>
      <description>Example usage co-pilot analyze --deps --target webservice Example output INFO[0000] Undeclared and unused dependencies for file webservice/pom.xml INFO[0005] unused declared dependencies com.microsoft.sqlserver:mssql-jdbc INFO[0005] unused declared dependencies org.flywaydb:flyway-core INFO[0005] unused declared dependencies org.jetbrains.kotlin:kotlin-reflect INFO[0005] unused declared dependencies org.jetbrains.kotlin:kotlin-stdlib-jdk8 INFO[0005] unused declared dependencies org.springframework.boot:spring-boot-starter-data-jpa INFO[0005] unused declared dependencies com.h2database:h2 INFO[0005] unused declared dependencies org.springframework.boot:spring-boot-starter-test INFO[0005] unused declared dependencies Finished at: 2020-09-30T12 INFO[0005] used undeclared dependencies org.springframework:spring-beans INFO[0005] used undeclared dependencies org.springframework:spring-context INFO[0005] used undeclared dependencies org.</description>
    </item>
    
  </channel>
</rss>