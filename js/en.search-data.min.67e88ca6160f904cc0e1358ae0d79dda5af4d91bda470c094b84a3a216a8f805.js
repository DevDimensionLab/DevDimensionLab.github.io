'use strict';(function(){const indexCfg={};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create(indexCfg);window.geekdocSearchIndex=index;index.add({'id':0,'href':'/','title':"Co-pilot",'content':"Co-pilot is a little “go help” for the Java/Kotlin developers using Maven.\nCurrent main capability? Upgrade your pom.xml dependencies to latest and greatest!\nWhy?  No installs of maven-plugins required, so if you a working in a multi-repo developer environment with lots of 2party dependencies and repos, you can easily upgrade them with co-pilot upgrade 2party. Brings natural semantics and support for different types of dependencies to the table: Kotlin, 2party, spring-boot (curated dependencies), (other) 3party Can be used as a library for other go-projects automating the upgrade process Easy and fast Brings feature to the table, not found anywhere else, stay tuned!  Heads up!  co-pilot rewrites your pom.xml, so make sure you have your pom.xml committed before testing out co-pilot start with co-pilot format pom, verify that the rewrite of the pom.xml is ok, commit, and from now on you will easily see the diff that co-pilot introduces with co-pilot upgrade \u0026lt;2party|3party|spring-boot|plugins|all\u0026gt; or just use co-pilot status (no rewrite) and manually upgrade your pom.xml based on what is reported as outdated, current option if you need to keep your pom.xml formatting  "});index.add({'id':1,'href':'/usage/configuration/','title':"Configuration",'content':"The first time running co-pilot a ~/.co-pilot configuration folder is created with a ~/.co-pilot/local-config.yaml file. The contents of this file by default are:\ncloudConfig: git: url: https://github.com/co-pilot-cli/co-pilot-config.git "});index.add({'id':2,'href':'/usage/','title':"Usages",'content':""});index.add({'id':3,'href':'/usage/docker/','title':"Docker",'content':"A docker image with the latest co-pilot binary is available at https://hub.docker.com/repository/docker/copilotcli/co-pilot-cli\n"});index.add({'id':4,'href':'/usage/install/','title':"Install",'content':"Co-pilot sources are available at https://github.com/co-pilot-cli/co-pilot\nDownload git clone https://github.com/co-pilot-cli/co-pilot.git Install make Help co-pilot "});index.add({'id':5,'href':'/commands/','title':"Commands",'content':" _____ _ _ _ / ____| (_) | | | | | ___ ______ _ __ _| | ___ | |_ | | / _ \\______| '_ \\| | |/ _ \\| __| | |___| (_) | | |_) | | | (_) | |_ \\_____\\___/ | .__/|_|_|\\___/ \\__| | | |_| == version: v0.2.25, built: 2020-09-30 10:49 == Co-pilot is a developer tool for automating common tasks on a spring boot project Usage: co-pilot [command] Available Commands: analyze Perform an analyze on a projects clean Clean files and folder in a project config Config settings for co-pilot format Format functionality for a project generate Initializes a maven project with co-pilot files and formatting help Help about any command info Prints info on spring version, dependencies etc init Initializes a maven project with co-pilot files and formatting merge Merge functionalities for files to a project status Status functionality for a project upgrade Upgrade options Flags: --debug turn on debug output -h, --help help for co-pilot Use \u0026quot;co-pilot [command] --help\u0026quot; for more information about a command. "});index.add({'id':6,'href':'/commands/upgrade/','title':"Upgrade",'content':"Perform upgrade on existing projects Usage: co-pilot upgrade [command] Available Commands: 2party Upgrade all 2party dependencies to project 3party Upgrade all 3party dependencies to project all Upgrade everything in project dependency Upgrade a specific dependency on a project deprecated Remove and replace deprecated dependencies in a project kotlin Upgrade kotlin version in project plugins Upgrade all plugins found in project spring-boot Upgrade spring-boot to the latest version Flags: --dry-run dry run does not write to pom.xml -h, --help help for upgrade --overwrite Overwrite pom.xml file (default true) -r, --recursive turn on recursive mode --target string Optional target directory (default \u0026quot;.\u0026quot;) Global Flags: --debug turn on debug output "});index.add({'id':7,'href':'/commands/status/','title':"Status",'content':"Status functionality for a project Usage: co-pilot status [flags] Flags: -h, --help help for status -r, --recursive turn on recursive mode --show show project status --target string optional target directory (default \u0026quot;.\u0026quot;) Global Flags: --debug turn on debug output "});index.add({'id':8,'href':'/commands/merge/','title':"Merge",'content':"Merge functionalities for files to a project Usage: co-pilot merge [command] Available Commands: pom Merges a pom-file into a project template Merges a template from co-pilot-config text Merges two text files Flags: --from string file to merge -h, --help help for merge --overwrite Overwrite pom.xml file (default true) Global Flags: --debug turn on debug output "});index.add({'id':9,'href':'/commands/init/','title':"Init",'content':"Initializes a maven project with co-pilot files and formatting Usage: co-pilot init [flags] Flags: --config-file string Optional config file --dry-run dry run does not write to pom.xml -h, --help help for init --overwrite Overwrite pom.xml file (default true) -r, --recursive turn on recursive mode --target string Optional target directory (default \u0026quot;.\u0026quot;) Global Flags: --debug turn on debug output "});index.add({'id':10,'href':'/commands/info/','title':"Info",'content':"Prints info on spring version, dependencies etc Usage: co-pilot info [flags] Flags: -h, --help help for info --maven-repositories show current maven repositories --spring-info show spring boot status --spring-managed show spring boot managed dependencies info Global Flags: --debug turn on debug output "});index.add({'id':11,'href':'/commands/generate/','title':"Generate",'content':"Initializes a maven project with co-pilot files and formatting Usage: co-pilot generate [flags] Flags: --config-file string Optional config file -h, --help help for generate --target string Optional target directory (default \u0026quot;.\u0026quot;) Global Flags: --debug turn on debug output "});index.add({'id':12,'href':'/commands/format/','title':"Format",'content':"Format functionality for a project Usage: co-pilot format [command] Available Commands: inherit Removes manual versions from spring dependencies pom Formats pom.xml and sorts dependencies version Removes version tags and replaces them with property tags Flags: --dry-run dry run does not write to pom.xml -h, --help help for format --overwrite Overwrite pom.xml file (default true) -r, --recursive turn on recursive mode --target string Optional target directory (default \u0026quot;.\u0026quot;) Global Flags: --debug turn on debug output "});index.add({'id':13,'href':'/commands/config/','title':"Config",'content':"Config settings for co-pilot Usage: co-pilot config [flags] Flags: --cloud-sync Sync with cloud config repo -h, --help help for config --reset Reset local config --show Sync local config Global Flags: --debug turn on debug output "});index.add({'id':14,'href':'/commands/clean/','title':"Clean",'content':"Clean files and folder in a project Usage: co-pilot clean [flags] Flags: -h, --help help for clean --ide removes .idea folders and *.iml files Global Flags: --debug turn on debug output "});index.add({'id':15,'href':'/commands/analyze/','title':"Analyze",'content':"Perform an analyze on a projects Usage: co-pilot analyze [flags] Flags: --deps Show dependency usage -h, --help help for analyze -r, --recursive recursive mode -t, --target string optional target directory (default \u0026quot;.\u0026quot;) Global Flags: --debug turn on debug output "});index.add({'id':16,'href':'/categories/','title':"Categories",'content':""});index.add({'id':17,'href':'/tags/','title':"Tags",'content':""});})();