<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>plybuild</title>
    <link>https://plybuild.io/</link>
    <description>Recent content on plybuild</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 30 Sep 2023 10:27:32 +0200</lastBuildDate>
    <atom:link href="https://plybuild.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Install</title>
      <link>https://plybuild.io/usage/install/</link>
      <pubDate>Wed, 30 Sep 2020 10:29:19 +0200</pubDate>
      <guid>https://plybuild.io/usage/install/</guid>
      <description>Plybuild is created with Go and supports multiple platforms including:&#xA;GNU/Linux Windows MacOs Download plybuild Install plybuild with one of the two alternatives&#xA;Alternative 1: Binaries Download the latest binaries from https://github.com/DevDimensionLab/plybuild/releases Alternative 2: Brew Add a new tap brew tap devdimensionlab/plybuild Install brew install plybuild Alternative 3: Sources plybuild sources are available at https://github.com/DevDimensionLab/plybuild&#xA;Clone sources git clone https://github.com/DevDimensionLab/plybuild.git Compile and install make install </description>
    </item>
    <item>
      <title>Install</title>
      <link>https://plybuild.io/commands/install/</link>
      <pubDate>Sat, 30 Sep 2023 10:27:32 +0200</pubDate>
      <guid>https://plybuild.io/commands/install/</guid>
      <description>Help Various install options for generating autocompletion etc Usage: ply install [flags] Flags: --autocomplete Generate autocomplete files -h, --help help for install Global Flags: --debug turn on debug output --json turn on json output logging </description>
    </item>
    <item>
      <title>Diagrams</title>
      <link>https://plybuild.io/commands/diagrams/</link>
      <pubDate>Sat, 30 Sep 2023 10:27:03 +0200</pubDate>
      <guid>https://plybuild.io/commands/diagrams/</guid>
      <description>Help Various tools for generating diagrams Usage: ply diagrams [command] Available Commands: kibana Specialized (experimental) command for executing a kibana-query based on a fetch-request [arg: fetch-file] and exporting the result to a json-file [arg: output-file] maven-graph creates a graph using maven for dependencies in a project structurizr Adding PNG-output support for structurizr with the help of graphviz Flags: -h, --help help for diagrams -r, --recursive turn on recursive mode --target string optional target directory (default &amp;#34;.</description>
    </item>
    <item>
      <title>Doc</title>
      <link>https://plybuild.io/commands/doc/</link>
      <pubDate>Sat, 30 Sep 2023 10:27:03 +0200</pubDate>
      <guid>https://plybuild.io/commands/doc/</guid>
      <description>Help Opens documentation in default browser Usage: ply doc [flags] Flags: -h, --help help for doc Global Flags: --debug turn on debug output --json turn on json output logging </description>
    </item>
    <item>
      <title>Example</title>
      <link>https://plybuild.io/commands/build/example/</link>
      <pubDate>Sat, 30 Sep 2023 10:27:03 +0200</pubDate>
      <guid>https://plybuild.io/commands/build/example/</guid>
      <description>Help Examples found in cloud-config Usage: ply examples [flags] ply examples [command] Available Commands: install install example from cloud-config Flags: --dry-run dry run does not write to pom.xml -h, --help help for examples --target string Optional target directory (default &amp;#34;.&amp;#34;) Global Flags: --debug turn on debug output --json turn on json output logging Use &amp;#34;ply examples [command] --help&amp;#34; for more information about a command. </description>
    </item>
    <item>
      <title>Tips</title>
      <link>https://plybuild.io/commands/tips/</link>
      <pubDate>Sat, 30 Sep 2023 10:27:03 +0200</pubDate>
      <guid>https://plybuild.io/commands/tips/</guid>
      <description>Help A concentrated version of things you need to know for a topic, typically internal know-how that you can&amp;#39;t find on the internet Usage: ply tips [flags] ply tips [command] Available Commands: list Lists all tips for current profile show Show tips Flags: -h, --help help for tips Global Flags: --debug turn on debug output --json turn on json output logging Use &amp;#34;ply tips [command] --help&amp;#34; for more information about a command.</description>
    </item>
    <item>
      <title>Bitbucket</title>
      <link>https://plybuild.io/commands/bitbucket/</link>
      <pubDate>Thu, 23 Dec 2021 10:27:32 +0200</pubDate>
      <guid>https://plybuild.io/commands/bitbucket/</guid>
      <description>Help Bitbucket functionality Usage: ply bitbucket [command] Available Commands: sync Synchronizes projects from bitbucket Flags: -h, --help help for bitbucket Global Flags: --debug turn on debug output --json turn on json output logging Use &amp;#34;ply bitbucket [command] --help&amp;#34; for more information about a command. Sync The bitbucket sync commands depends on valid credentials and HTTP address inn ~/.plybuild/local-config.yaml&#xA;sourceProvider: host: &amp;#34;https://...&amp;#34; access_token: &amp;#34;...&amp;#34; </description>
    </item>
    <item>
      <title>Git</title>
      <link>https://plybuild.io/commands/git/</link>
      <pubDate>Wed, 22 Dec 2021 10:27:32 +0200</pubDate>
      <guid>https://plybuild.io/commands/git/</guid>
      <description>Help Git commands Usage: ply git [command] Available Commands: install-hooks install git hooks from cloud config Flags: --cloud-sync force cloud sync -h, --help help for git -r, --recursive turn on recursive mode --target string optional target directory (default &amp;#34;.&amp;#34;) Global Flags: --debug turn on debug output --json turn on json output logging Use &amp;#34;ply git [command] --help&amp;#34; for more information about a command. Example usage plybuild git install-hooks </description>
    </item>
    <item>
      <title>Lint</title>
      <link>https://plybuild.io/commands/lint/</link>
      <pubDate>Tue, 21 Dec 2021 10:27:32 +0200</pubDate>
      <guid>https://plybuild.io/commands/lint/</guid>
      <description>Dependencies Some of these commands depends on:&#xA;ktlint Help Linting commands Usage: ply lint [command] Available Commands: kotlin uses ktlint for linting kotlin code Flags: -h, --help help for lint -r, --recursive turn on recursive mode --target string optional target directory (default &amp;#34;.&amp;#34;) Global Flags: --debug turn on debug output --json turn on json output logging Use &amp;#34;ply lint [command] --help&amp;#34; for more information about a command. Example usage plybuild lint </description>
    </item>
    <item>
      <title>Maven</title>
      <link>https://plybuild.io/commands/maven/</link>
      <pubDate>Tue, 21 Dec 2021 10:27:32 +0200</pubDate>
      <guid>https://plybuild.io/commands/maven/</guid>
      <description>Dependencies Some of these commands depends on:&#xA;mvn dot (graphviz) Help Run maven (mvn) commands Usage: ply maven [command] Available Commands: analyze Perform an analyze on a projects boot-run runs a spring boot application checkstyle runs checkstyle enforcer runs enforcer owasp runs owasp Flags: -h, --help help for maven -r, --recursive turn on recursive mode --target string optional target directory (default &amp;#34;.&amp;#34;) Global Flags: --debug turn on debug output --json turn on json output logging Use &amp;#34;ply maven [command] --help&amp;#34; for more information about a command.</description>
    </item>
    <item>
      <title>Query</title>
      <link>https://plybuild.io/commands/query/</link>
      <pubDate>Tue, 21 Dec 2021 10:27:32 +0200</pubDate>
      <guid>https://plybuild.io/commands/query/</guid>
      <description>Help Query dependencies in a project Usage: ply query [flags] Flags: -a, --artifactId string artifactId -g, --groupId string groupId -h, --help help for query --target string Optional target directory (default &amp;#34;.&amp;#34;) Global Flags: --debug turn on debug output --json turn on json output logging Example usage plybuild query </description>
    </item>
    <item>
      <title>Dependencies</title>
      <link>https://plybuild.io/usage/dependencies/</link>
      <pubDate>Mon, 05 Oct 2020 11:15:08 +0200</pubDate>
      <guid>https://plybuild.io/usage/dependencies/</guid>
      <description>plybuild strives to depend on as few third parties as possible, but some dependencies are optional&#xA;Git plybuild uses git for various operations related to cloud-config and templates. Without git installed some functionality might not work as expected.&#xA;Without git A clean Windows 10 installation without git:&#xA;With git git installed on the cmd.exe path with git bash:&#xA;Maven plybuild uses mvn Maven for some analytics commands.</description>
    </item>
    <item>
      <title>Ignores</title>
      <link>https://plybuild.io/template/ignore/</link>
      <pubDate>Wed, 30 Sep 2020 13:07:42 +0200</pubDate>
      <guid>https://plybuild.io/template/ignore/</guid>
      <description>During the merge process of a template into a target directory plybuild ignores the following files:&#xA;Default ignore Regardless what is defined in the ignore files, plybuild will ignore filenames matching:&#xA;[ &amp;#34;Application&amp;#34;, &amp;#34;plybuild.json&amp;#34;, &amp;#34;.plybuild.ignore&amp;#34;, &amp;#34;.gitignore&amp;#34;, &amp;#34;.mvn&amp;#34;, &amp;#34;mvnw&amp;#34;, &amp;#34;mvnw.cmd&amp;#34;, &amp;#34;.idea&amp;#34;, &amp;#34;.iml&amp;#34; ] Ignoring filesnames matching Application&#xA;The first entry Application, in the list above, enables plybuild to ignore files like WebApplication.kt or FooApplication.java. Files which are typically files containing the @SpringBootApplication.</description>
    </item>
    <item>
      <title>Basics</title>
      <link>https://plybuild.io/template/basics/</link>
      <pubDate>Wed, 30 Sep 2020 13:07:36 +0200</pubDate>
      <guid>https://plybuild.io/template/basics/</guid>
      <description>Templates is a concept where plybuild effectively merges one project into another. Templates are added to the cloud-config repo under a templates folder, example, and are later referred to by their folder name in the plybuild.json file. A template, like most projects, consists of these filetypes:&#xA;Filetypes Filetypes in templates are&#xA;.kt and .java files If a template supplies a .kt or a .java file, the file is copied to its right destination and the package com.</description>
    </item>
    <item>
      <title>Cloud</title>
      <link>https://plybuild.io/configuration/cloud/</link>
      <pubDate>Wed, 30 Sep 2020 12:55:39 +0200</pubDate>
      <guid>https://plybuild.io/configuration/cloud/</guid>
      <description>plybuild supports cloud configuration for some of its more advanced features. A cloud configuration is simply an available git repository referred to in the local config file ~/.plybuild/local-config.yaml. An example is shipped with plybuild at https://github.com/plybuild/plybuild-config.&#xA;Requirements The requirements for the cloud config repository is that there exists a template folder, and a deprecated.json and services.json,file on the root level.&#xA;Example - Deprecated.json { &amp;#34;type&amp;#34;: &amp;#34;deprecated&amp;#34;, &amp;#34;data&amp;#34;: { &amp;#34;dependencies&amp;#34;: [ { &amp;#34;groupId&amp;#34;: &amp;#34;log4j&amp;#34;, &amp;#34;artifactId&amp;#34;: &amp;#34;log4j&amp;#34;, &amp;#34;files&amp;#34;: [&amp;#34;src/main/resources/log4j.</description>
    </item>
    <item>
      <title>Project</title>
      <link>https://plybuild.io/configuration/project/</link>
      <pubDate>Wed, 30 Sep 2020 12:53:19 +0200</pubDate>
      <guid>https://plybuild.io/configuration/project/</guid>
      <description>In every plybuild project and template there should be located a plybuild.json file describing the project.&#xA;Example plybuild.json { &amp;#34;language&amp;#34;: &amp;#34;kotlin&amp;#34;, &amp;#34;groupId&amp;#34;: &amp;#34;com.example&amp;#34;, &amp;#34;artifactId&amp;#34;: &amp;#34;app&amp;#34;, &amp;#34;package&amp;#34;: &amp;#34;com.example.app&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;Example REST basic app&amp;#34;, &amp;#34;team&amp;#34;: { &amp;#34;name&amp;#34;: &amp;#34;demo-name&amp;#34;, &amp;#34;email&amp;#34;: &amp;#34;demo-email@example.com&amp;#34; }, &amp;#34;description&amp;#34;: &amp;#34;Demo of new app, generated with spring-boot and plybuild templates&amp;#34;, &amp;#34;dependencies&amp;#34;: [&amp;#34;web-services&amp;#34;], &amp;#34;templates&amp;#34; : [&amp;#34;dockerfile&amp;#34;, &amp;#34;rest-basic&amp;#34;], &amp;#34;settings&amp;#34;: { &amp;#34;disableDependencySort&amp;#34;: false, &amp;#34;disableKotlinUpgrade&amp;#34;: false, &amp;#34;disableSpringBootUpgrade&amp;#34;: false, &amp;#34;disableUpgradesFor&amp;#34;: [ { &amp;#34;groupId&amp;#34;: &amp;#34;com.example&amp;#34;, &amp;#34;artifactId&amp;#34;: &amp;#34;artifactId&amp;#34; } ], &amp;#34;maxVersionForDependencies&amp;#34;: [ { &amp;#34;groupId&amp;#34;: &amp;#34;com.</description>
    </item>
    <item>
      <title>Basics</title>
      <link>https://plybuild.io/usage/basics/</link>
      <pubDate>Wed, 30 Sep 2020 12:17:56 +0200</pubDate>
      <guid>https://plybuild.io/usage/basics/</guid>
      <description>Most of the ply commands operate on some common principles, target, recursive, and dry-run.&#xA;--target By default ply operates on the current folder similar to tools like git. However a custom --target flag is available for most commands and enables the used to use ply ... --target outside of the working folder.&#xA;--recursive Recursive mode is enabled with --recursive or -r for most commands. This mode starts by building a list of subprojects on the current target, and iteratively working on each subproject.</description>
    </item>
    <item>
      <title>Local</title>
      <link>https://plybuild.io/configuration/local/</link>
      <pubDate>Wed, 30 Sep 2020 10:40:32 +0200</pubDate>
      <guid>https://plybuild.io/configuration/local/</guid>
      <description>The first time running plybuild a ~/.plybuild configuration folder is created with a ~/.plybuild/local-config.yaml file. The contents of this file by default are:&#xA;cloudConfig: git: url: https://github.com/plybuild/plybuild-config.git </description>
    </item>
    <item>
      <title>Upgrade</title>
      <link>https://plybuild.io/commands/upgrade/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:44 +0200</pubDate>
      <guid>https://plybuild.io/commands/upgrade/</guid>
      <description>Upgrade is a command for upgrading all or specific parts of a project.&#xA;Help Perform upgrade on existing projects Usage: ply upgrade [command] Available Commands: 2party Upgrade all 2party dependencies to project 3party Upgrade all 3party dependencies to project all Upgrade everything in project dependency Upgrade a specific dependency on a project deprecated Remove and replace deprecated dependencies in a project interactive Interactively upgrade the project kotlin Upgrade kotlin version in project plugins Upgrade all plugins found in project spring-boot Upgrade spring-boot to the latest version with-versions Upgrade using mvn versions in a project Flags: --cloud-sync force cloud sync --dry-run dry run does not write to pom.</description>
    </item>
    <item>
      <title>Status</title>
      <link>https://plybuild.io/commands/status/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:42 +0200</pubDate>
      <guid>https://plybuild.io/commands/status/</guid>
      <description>Status is a command for printing status on a plybuild project. By default it outputs available upgrades.&#xA;Help Status functionality for a project Usage: ply status [flags] Flags: --cloud-sync force cloud sync -h, --help help for status -r, --recursive turn on recursive mode --show show project status --target string optional target directory (default &amp;#34;.&amp;#34;) Global Flags: --debug turn on debug output --json turn on json output logging Example usage plybuild status Example output INFO[0000] Project status for file .</description>
    </item>
    <item>
      <title>Merge</title>
      <link>https://plybuild.io/commands/merge/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:39 +0200</pubDate>
      <guid>https://plybuild.io/commands/merge/</guid>
      <description>Merge is a standalone command for merging a specific template into a target. It is the same process used iteratively by generate&#xA;Help Merge functionalities for files to a project Usage: ply merge [command] Available Commands: pom Merges a pom-file into a project template Merges a template from ply-config text Merges two text files Flags: --from string file to merge -h, --help help for merge Global Flags: --debug turn on debug output --json turn on json output logging Use &amp;#34;ply merge [command] --help&amp;#34; for more information about a command.</description>
    </item>
    <item>
      <title>Init</title>
      <link>https://plybuild.io/commands/init/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:32 +0200</pubDate>
      <guid>https://plybuild.io/commands/init/</guid>
      <description>Initializes a project with plybuild files like plybuild.json. The command also overwrites the pom.xml files with standard formatting and sorting.&#xA;Help Initializes a maven project with ply files and formatting Usage: ply init [flags] Flags: --config-file string Optional config file --dry-run dry run does not write to pom.xml -h, --help help for init -r, --recursive turn on recursive mode --target string Optional target directory (default &amp;#34;.&amp;#34;) Global Flags: --debug turn on debug output --json turn on json output logging </description>
    </item>
    <item>
      <title>Info</title>
      <link>https://plybuild.io/commands/info/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:29 +0200</pubDate>
      <guid>https://plybuild.io/commands/info/</guid>
      <description>Info is a command for printing various non-project information like spring-info, spring-managed dependencies, and which maven-repositories are defined by mvn&#xA;Help Prints info on spring version, dependencies etc Usage: ply info [flags] Flags: -h, --help help for info --maven-repositories show current maven repositories --spring-info show spring boot status --spring-managed show spring boot managed dependencies info Global Flags: --debug turn on debug output --json turn on json output logging </description>
    </item>
    <item>
      <title>Generate</title>
      <link>https://plybuild.io/commands/generate/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:20 +0200</pubDate>
      <guid>https://plybuild.io/commands/generate/</guid>
      <description>Generate initializes a spring boot project using https://start.spring.io.&#xA;Help Initializes a maven project with ply files and formatting Usage: ply generate [flags] ply generate [command] Available Commands: clean Cleans a maven project with ply files and formatting list-templates Lists all available templates Flags: --application-name string Overrides applicationName from config file --artifact-id string Overrides artifactId from config file --boot-version string Defines spring-boot version to use --cloud-sync Cloud sync (default true) --config-file string Optional config file (default &amp;#34;ply.</description>
    </item>
    <item>
      <title>Format</title>
      <link>https://plybuild.io/commands/format/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:18 +0200</pubDate>
      <guid>https://plybuild.io/commands/format/</guid>
      <description>Help Format functionality for a project Usage: ply format [command] Available Commands: inherit Removes manual versions from spring dependencies pom Formats pom.xml and sorts dependencies version Removes version tags and replaces them with property tags Flags: --dry-run dry run does not write to pom.xml -h, --help help for format -r, --recursive turn on recursive mode --target string Optional target directory (default &amp;#34;.&amp;#34;) Global Flags: --debug turn on debug output --json turn on json output logging Use &amp;#34;ply format [command] --help&amp;#34; for more information about a command.</description>
    </item>
    <item>
      <title>Profiles</title>
      <link>https://plybuild.io/commands/profiles/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:11 +0200</pubDate>
      <guid>https://plybuild.io/commands/profiles/</guid>
      <description>Help Manage profiles settings for ply Usage: ply profiles [flags] ply profiles [command] Available Commands: config Config display in the terminal Flags: --cloud-sync sync with cloud config repo --edit edit active profile local config -h, --help help for profiles --reset reset local config --show show local config --use string switch to profile Global Flags: --debug turn on debug output --json turn on json output logging Use &amp;#34;ply profiles [command] --help&amp;#34; for more information about a command.</description>
    </item>
    <item>
      <title>Clean</title>
      <link>https://plybuild.io/commands/clean/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:03 +0200</pubDate>
      <guid>https://plybuild.io/commands/clean/</guid>
      <description>Help Clean files and folder in a project Usage: ply clean [flags] Flags: --dry-run dry run does not write to pom.xml -h, --help help for clean --ide removes .idea folders and *.iml files -r, --recursive turn on recursive mode --target string Optional target directory (default &amp;#34;.&amp;#34;) Global Flags: --debug turn on debug output --json turn on json output logging Example usage ply clean --ide --target webservice Example output INFO[0000] Deleted 0 files and 0 directories </description>
    </item>
    <item>
      <title>Completion</title>
      <link>https://plybuild.io/commands/completion/</link>
      <pubDate>Wed, 30 Sep 2020 10:27:03 +0200</pubDate>
      <guid>https://plybuild.io/commands/completion/</guid>
      <description>Help Generate the autocompletion script for ply for the specified shell. See each sub-command&amp;#39;s help for details on how to use the generated script. Usage: ply completion [command] Available Commands: bash Generate the autocompletion script for bash fish Generate the autocompletion script for fish powershell Generate the autocompletion script for powershell zsh Generate the autocompletion script for zsh Flags: -h, --help help for completion Global Flags: --debug turn on debug output --json turn on json output logging Use &amp;#34;ply completion [command] --help&amp;#34; for more information about a command.</description>
    </item>
  </channel>
</rss>
